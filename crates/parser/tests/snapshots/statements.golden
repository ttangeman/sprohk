node 0 {
  kind: TypeExpr
  tokens: [5..6]
  data: {
    root: 'i32'
  }
}
node 1 {
  kind: FnParameter
  tokens: [3..6]
  data: {
    name: x
    type_expr: 0
  }
}
node 2 {
  kind: TypeExpr
  tokens: [8..9]
  data: {
    root: 'i32'
  }
}
node 3 {
  kind: FnPrototype
  tokens: [0..9]
  data: {
    name: foo
    ret_type_expr: 2
    params: [
      1
    ]
  }
}
node 4 {
  kind: TypeExpr
  tokens: [13..14]
  data: {
    root: 'u32'
  }
}
node 5 {
  kind: ValueExpr
  tokens: [15..16]
  data: {
    literal: '0'
  }
}
node 6 {
  kind: VarDecl
  tokens: [10..17]
  data: {
    specifier: Var
    name: 'y'
    type_expr: 4
    assign_expr: 5
  }
}
node 7 {
  kind: ValueExpr
  tokens: [18..19]
  data: {
    variable: 'x'
  }
}
node 8 {
  kind: ValueExpr
  tokens: [20..21]
  data: {
    literal: '42'
  }
}
node 9 {
  kind: ValueExpr
  tokens: [18..21]
  data: {
    op: '=='
    lhs: 7
    rhs: 8
  }
}
node 10 {
  kind: ValueExpr
  tokens: [22..23]
  data: {
    variable: 'y'
  }
}
node 11 {
  kind: ValueExpr
  tokens: [24..25]
  data: {
    literal: '1'
  }
}
node 12 {
  kind: AssignStmt
  tokens: [22..26]
  data: {
    lhs: 10
    rhs: 11
  }
}
node 13 {
  kind: Block
  tokens: [21..27]
  data: {
    statements: [
      12
    ]
  }
}
node 14 {
  kind: ValueExpr
  tokens: [29..30]
  data: {
    variable: 'x'
  }
}
node 15 {
  kind: ValueExpr
  tokens: [31..32]
  data: {
    literal: '42'
  }
}
node 16 {
  kind: ValueExpr
  tokens: [29..32]
  data: {
    op: '>'
    lhs: 14
    rhs: 15
  }
}
node 17 {
  kind: ValueExpr
  tokens: [33..34]
  data: {
    variable: 'y'
  }
}
node 18 {
  kind: ValueExpr
  tokens: [35..36]
  data: {
    literal: '2'
  }
}
node 19 {
  kind: AssignStmt
  tokens: [33..37]
  data: {
    lhs: 17
    rhs: 18
  }
}
node 20 {
  kind: Block
  tokens: [32..38]
  data: {
    statements: [
      19
    ]
  }
}
node 21 {
  kind: ValueExpr
  tokens: [40..41]
  data: {
    variable: 'y'
  }
}
node 22 {
  kind: ValueExpr
  tokens: [42..43]
  data: {
    literal: '3'
  }
}
node 23 {
  kind: AssignStmt
  tokens: [40..44]
  data: {
    lhs: 21
    rhs: 22
  }
}
node 24 {
  kind: Block
  tokens: [39..45]
  data: {
    statements: [
      23
    ]
  }
}
node 25 {
  kind: IfStmt
  tokens: [28..45]
  data: {
    cond_expr: 16
    then_block: 20
    else_block: 24
  }
}
node 26 {
  kind: IfStmt
  tokens: [17..45]
  data: {
    cond_expr: 9
    then_block: 13
    else_if: 25
  }
}
node 27 {
  kind: ValueExpr
  tokens: [46..47]
  data: {
    variable: 'y'
  }
}
node 28 {
  kind: ValueExpr
  tokens: [48..49]
  data: {
    literal: '10'
  }
}
node 29 {
  kind: ValueExpr
  tokens: [46..49]
  data: {
    op: '<'
    lhs: 27
    rhs: 28
  }
}
node 30 {
  kind: ValueExpr
  tokens: [50..51]
  data: {
    variable: 'y'
  }
}
node 31 {
  kind: ValueExpr
  tokens: [52..53]
  data: {
    variable: 'y'
  }
}
node 32 {
  kind: ValueExpr
  tokens: [54..55]
  data: {
    literal: '1'
  }
}
node 33 {
  kind: ValueExpr
  tokens: [52..55]
  data: {
    op: '+'
    lhs: 31
    rhs: 32
  }
}
node 34 {
  kind: AssignStmt
  tokens: [50..56]
  data: {
    lhs: 30
    rhs: 33
  }
}
node 35 {
  kind: LoopStmt
  tokens: [56..58]
  data: {
    continue
  }
}
node 36 {
  kind: Block
  tokens: [49..59]
  data: {
    statements: [
      34,
      35
    ]
  }
}
node 37 {
  kind: LoopStmt
  tokens: [45..59]
  data: {
    cond_expr: 29
    block: 36
  }
}
node 38 {
  kind: ValueExpr
  tokens: [61..62]
  data: {
    variable: 'y'
  }
}
node 39 {
  kind: ValueExpr
  tokens: [63..64]
  data: {
    literal: '42'
  }
}
node 40 {
  kind: AssignStmt
  tokens: [61..65]
  data: {
    lhs: 38
    rhs: 39
  }
}
node 41 {
  kind: LoopStmt
  tokens: [65..67]
  data: {
    break
  }
}
node 42 {
  kind: Block
  tokens: [60..68]
  data: {
    statements: [
      40,
      41
    ]
  }
}
node 43 {
  kind: LoopStmt
  tokens: [59..68]
  data: {
    block: 42
  }
}
node 44 {
  kind: Block
  tokens: [9..69]
  data: {
    statements: [
      6,
      26,
      37,
      43
    ]
  }
}
node 45 {
  kind: Function
  tokens: [0..69]
  data: {
    prototype: 3
    block: 44
  }
}
