node 0 {
  kind: TypeExpr
  tokens: [5..6]
  data: {
    root: 'i32'
  }
}
node 1 {
  kind: FnParameter
  tokens: [3..6]
  data: {
    name: p
    type_expr: 0
  }
}
node 2 {
  kind: FnPrototype
  tokens: [0..7]
  data: {
    name: foobar
    params: [
      1    
]
  }
}
node 3 {
  kind: ValueExpr
  tokens: [11..14]
  data: {
    function: 'foo'
  }
}
node 4 {
  kind: VarDecl
  tokens: [8..15]
  data: {
    specifier: Let
    name: 'a'
    assign_expr: 3
  }
}
node 5 {
  kind: ValueExpr
  tokens: [20..21]
  data: {
    literal: '1'
  }
}
node 6 {
  kind: ValueExpr
  tokens: [22..23]
  data: {
    literal: '2'
  }
}
node 7 {
  kind: ValueExpr
  tokens: [24..25]
  data: {
    literal: '3'
  }
}
node 8 {
  kind: ValueExpr
  tokens: [18..26]
  data: {
    function: 'bar'
    params: [
      5,
      6,
      7    
]
  }
}
node 9 {
  kind: VarDecl
  tokens: [15..27]
  data: {
    specifier: Let
    name: 'b'
    assign_expr: 8
  }
}
node 10 {
  kind: Block
  tokens: [7..28]
  data: {
    statements: [
      4,
      9    
]
  }
}
node 11 {
  kind: Function
  tokens: [0..28]
  data: {
    prototype: 2
    block: 10
  }
}
node 12 {
  kind: ValueExpr
  tokens: [33..34]
  data: {
    literal: '42'
  }
}
node 13 {
  kind: ValueExpr
  tokens: [31..35]
  data: {
    function: 'foobar'
    params: [
      12    
]
  }
}
node 14 {
  kind: VarDecl
  tokens: [28..36]
  data: {
    specifier: Const
    name: 'x'
    assign_expr: 13
  }
}
